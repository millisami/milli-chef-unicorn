###
# Generated by Chef for <%= node['fqdn'] %>
###

current_path = '<%= @current_path %>'

worker_processes <%= @worker_processes %>
working_directory current_path

listen <%= "'#{@unicorn_listen}'" + "#{', ' + @unicorn_listen_options.inspect if @unicorn_listen_options}" %>

<% if @unicorn_port %>
listen "<%= @unicorn_port %>", :tcp_nopush => true
<% else %>
listen "8080", :tcp_nopush => true
<% end %>

# user "<%= @user %>"

timeout <%= @unicorn_timeout %>

pid '<%= @unicorn_pid %>'

preload_app <%= @unicorn_preload_app %>

GC.respond_to?(:copy_on_write_friendly=) and
  GC.copy_on_write_friendly = <%= @cow_friendly %>

before_fork do |server, worker|
  # the following is highly recomended for Rails + "preload_app true"
  # as there's no need for the master process to hold a connection
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!

  # Before forking, kill the master process that belongs to the .oldbin PID.
  # This enables 0 downtime deploys.
  old_pid = "<%= @shared_path %>/pids/unicorn.pid.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      puts "Old master is alread dead"
    end
  end
end

after_fork do |server, worker|
  worker.user('<%= @user %>', '<%= @group %>') if Process.euid == 0

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection
end

# ensure Unicorn doesn't use a stale Gemfile when restarting
# more info: https://willj.net/2011/08/02/fixing-the-gemfile-not-found-bundlergemfilenotfound-error/
before_exec do |server|
  ENV['BUNDLE_GEMFILE'] = "<%= @current_path %>/current/Gemfile"
end
